F_UWID = F_DF * `F_T,FW` + F_DW * `F_T,WW-1` + F_DC * `F_T,CW`,
B_end = 1000 * N / A_wall,
B_cross = 1000 * N / A_wall,
E_WID_end = F_UWID * B_end,
E_WID_cross = F_UWID * B_cross
)
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR <- luminaire %>%
na.omit() %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p), sum ))
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross^2 / (A_p_cross * R^2 * p^2) ) -
8 * log10( E_WID_cross / pi)
)
test <- UGR %>%
left_join(luminaire, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross^2 / (A_p_cross * R^2 * p^2) ) -
8 * log10( E_WID_cross / pi)
)
View(test)
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR <- luminaire %>%
na.omit() %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross^2 / (A_p_cross * R^2 * p^2) ) -
8 * log10( E_WID_cross / pi)
)
UGR <- luminaire %>%
na.omit() %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
mutate(I_CG_cross = I_CG_cross^2, R = R^2, p = p^2)
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR <- luminaire %>%
na.omit() %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
mutate(I_CG_cross = I_CG_cross^2, R = R^2, p = p^2) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross / (A_p_cross * R * p) ) -
8 * log10( E_WID_cross / pi)
)
View(test)
UGR <- luminaire %>%
na.omit() %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross^2 / (A_p_cross * R^2 * p^2) ) -
8 * log10( E_WID_cross / pi)
)
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross^2, R = R^2, p = p^2) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross / (A_p_cross * R * p) ) -
8 * log10( E_WID_cross / pi)
)
View(test)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(pracma)
library(openxlsx)
#library(knitr)
library(kableExtra)
dir_path <- "H:/Projekte/RStudio/LVK"
files_path <- list.files(
path = dir_path,
pattern = c(".ldt$"),
full.names = TRUE,
recursive = TRUE,
ignore.case = TRUE
)
file <- files_path[2]
# Einlesen der txt-Zeilen
LDT <- readLines(file)
# Art der Symmetrie Isym
Isym <- LDT[3]
# Anzahl Mc der C-Ebenen zwischen 0° und 360°
Mc <- LDT[4] %>% as.numeric()
# Winkelintervall Dc zwischen den C-Ebenen
#   (Dc = 0 für nicht-äquidistante C-Ebenen)
Dc <- LDT[5] %>% as.numeric()
# Anzahl Ng der Lichtstärkewerte in jeder C-Ebene
Ng <- LDT[6] %>% as.numeric()
# Winkelintervall Dg <- zwischen den Lichtstärke werten einer C-Ebene
#   (Dg = 0 für nicht-äquidistante Lichtstärkewerte in einer C-Ebene)
Dg <- LDT[7] %>% as.numeric()
# Abmessungen der Leuchte l x b x h in m
l <- LDT[13] %>% as.numeric() / 1000
b <- LDT[14] %>% as.numeric() / 1000
h <- LDT[15] %>% as.numeric() / 1000
# Abmessungen der leuchtende Fläche in m
l_lum <- LDT[16] %>% as.numeric() / 1000
b_lum <- LDT[17] %>% as.numeric() / 1000
h_lum <- LDT[18:21] %>% as.numeric() / 1000
# Anzahl der Lampen
N_lamp <- LDT[26] %>% as.numeric()
# Lichtstrom aller Lampen
light_flux <- LDT[29] %>% as.numeric()
# Offsets
offset1 <- 32 + (N_lamp - 1) * 6
offset2 <- offset1 + 10
offset3 <- offset2 + Mc
offset4 <- offset3 + Ng
# Lampendaten
lamp_data <- LDT[27:offset1]
# Direct Ratios für definierte Raum-Indexe
direct_ratios <- LDT[(offset1 + 1):offset2]
# C-Winkel
C_angle <- LDT[(offset2 + 1):offset3] %>% as.numeric()
# G-Winkel (gamma)
G_angle <- LDT[(offset3 + 1):offset4] %>% as.numeric()
if (Isym == "3") {G_angle <- G_angle + 90}
data <- LDT[-(1:offset4)]
switch(Isym,
`0` = C_end_value <- Mc,
`1` = C_end_value <- 1,
`2` = C_end_value <- Mc / 2 + 1,
`3` = C_end_value <- Mc / 2 + 1,
`4` = C_end_value <- Mc / 4 + 1
)
df_I <- data.frame(G = numeric(), C = numeric(), I = numeric())
data_sub <- data
for (angle in C_angle[1:C_end_value]) {
G <- G_angle
C <- if_else(Isym != "3", angle, angle + 90)
I <- data_sub[1:Ng] %>% as.numeric()
data_sub <- data_sub[-(1:Ng)]
df_I <- data.frame(G, C, I) %>%
bind_rows(df_I, .)
}
# Berechne die Verschiebung der gamma-Winkel für Partiallichtströme
G_1 <- G_angle - Dg / 2
G_2 <- G_angle + Dg / 2
G_zonal_flux <- G_2
G_1 <- if_else(G_1 < 0  ,   0, G_1)
G_2 <- if_else(G_2 > 180, 180, G_2)
# Berechnung des Raumwinkels Omega aller Teillichtströme
Omega <- 2 * pi * ( cos(G_1 * pi / 180) - cos(G_2 * pi / 180) )
# Aufhebung der normierten Lichtstärkewerte
df_I_wide <- df_I %>%
mutate( I_abs = I * (light_flux / 1000) ) %>%
select(-I) %>%
pivot_wider(names_from = C, values_from = I_abs) %>%
mutate(
I_avg = rowMeans(across(-G)),
zonal_flux = I_avg * Omega
)
zonal_flux_cumsum <- cumsum(df_I_wide$zonal_flux)
# lineare Interpolation
FCL <- interp1( G_zonal_flux, zonal_flux_cumsum, c(41.4, 60, 75, 90) )
R_LO  <- tail(zonal_flux_cumsum, 1) / light_flux   # light output ratio
F_S   <- R_LO * 1000 / tail(zonal_flux_cumsum, 1)  # scale factor
R_DLO <- FCL[4] * F_S / light_flux # downward light output ratio
R_ULO <- R_LO - R_DLO				       # upward light output ratio
SHR <- 1 / 1       # Space to Height Ratio
H <- 2             # Montagehöhe der Leuchte bzgl. Beobachterposition
S <- SHR * H       # Abstand zwischen Leuchten
S2 <- S / 2
room_param <- readWorkbook(
"CIE-190-2010_tables.xlsx",
sheet = "Table 5_long",
startRow = 1
) %>%
mutate(
X_abs = sub("H", "", X_Dim) %>% as.numeric() * H, # in m
Y_abs = sub("H", "", Y_Dim) %>% as.numeric() * H  # in m
)
kable(room_param) %>% kable_classic()
luminaire <- room_param %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
expand(
seq(-(X_abs / H) + S2, (X_abs / H) - S2, S),
seq(S2, Y_abs, S),
) %>%
rename("X" = 4, "Y" = 5) %>%
left_join(room_param, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
ungroup()
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
A_B <- 0.316 # area of luminous base in m²
A_S <- 0     # area of luminous side in m²
A_E <- 0     # area of luminous end  in m²
luminaire <- luminaire %>%
mutate(
R = sqrt(X^2 + Y^2 + H^2),
G = acos(H / R) / pi * 180,
C_cross = atan(X / Y) / pi * 180,
C_cross = if_else(X < 0, C_cross + 360, C_cross),
C_end = 90 + atan(X / Y) / pi * 180,
A_p_end  = A_B * H / R + A_S * X / R + A_E * Y / R,
A_p_cross = A_B * H / R + A_S * X / R + A_E * Y / R
)
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
t4.1 <- read.csv("CIE-117-1995_table4.1.csv", skip = 1, check.names = F) %>%
filter(!is.na(`T/R`))
X_Y_x <- t4.1$`T/R`
H_Y_x <- select(t4.1, -`T/R`) %>% colnames() %>% as.numeric()
p_x <- select(t4.1, -`T/R`) %>% data.matrix() %>% t()
luminaire <- luminaire %>%
mutate(
X_Y = abs(X / Y),
H_Y = abs(H / Y),
p = interp2(X_Y_x, H_Y_x, p_x, X_Y, H_Y)
)
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
G_x <- unique(df_I$G)
# add additional C360 for interpolating. Same values as C0
C_x <- unique(df_I$C) %>% c(360)
I_x <- select(df_I_wide, -c(G, I_avg, zonal_flux)) %>%
mutate(`360` = `0`) %>%
t()
luminaire$I_CG_cross <- interp2(
G_x, C_x, I_x, luminaire$G, luminaire$C_cross
)
luminaire$I_CG_end <- interp2(
G_x, C_x, I_x, luminaire$G, luminaire$C_end
)
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
luminaire <- luminaire %>%
mutate(K = pi / (4 * R^2 * p^2))
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
luminaire <- luminaire %>%
mutate(
A_wall = 2 * X_abs * H + 2 * Y_abs * H,
N = X_abs / S * Y_abs / S,
B = light_flux * N / A_wall
)
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
t4 <- readWorkbook("CIE-190-2010_tables.xlsx", sheet = "Table 4", startRow = 1)
luminaire <- left_join(luminaire, t4, by = c("X_Dim", "Y_Dim")) %>%
mutate(
zonal_flux = FCL[1] * F_GL1 + FCL[2] * F_GL2 + FCL[3] * F_GL3 +
FCL[4] * F_GL4,
F_DF = zonal_flux / 1000,
F_DW = R_DLO - F_DF,
F_DC = R_ULO,
F_UWID = F_DF * `F_T,FW` + F_DW * `F_T,WW-1` + F_DC * `F_T,CW`,
B_end = 1000 * N / A_wall,
B_cross = 1000 * N / A_wall,
E_WID_end = F_UWID * B_end,
E_WID_cross = F_UWID * B_cross
)
luminaire %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross^2, R = R^2, p = p^2) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross / (A_p_cross * R * p) ) -
8 * log10( E_WID_cross / pi)
)
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross, R = R, p = p) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross / (A_p_cross * R * p) ) -
8 * log10( E_WID_cross / pi)
)
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross, R = R, p = p) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10( 1/4 * I_CG_cross^2 / (A_p_cross * R^2 * p^2) ) -
8 * log10( E_WID_cross / pi)
)
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross, R = R, p = p) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross, R = R, p = p) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum ))
# UGR %>%
# 	filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
# 	kable() %>%
# 	kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
View(UGR)
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
merge(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
str(UGR)
UGR <- luminaire %>%
na.omit() %>%
mutate(I_CG_cross = I_CG_cross, R = R, p = p) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(c(I_CG_cross, A_p_cross, R, p, K), sum )) %>%
ungroup()
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
inner_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
?merge
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
merge(UGR, by.y = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
UGR <- luminaire %>%
na.omit() %>%
mutate(SUM = I_CG_cross^2 /( A_p_cross * R^2 * p^2)) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(SUM, sum )) %>%
ungroup()
UGR
8 * log10(UGR$SUM / 4) - 8 * log10 ( 27.37)
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim"))
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10(UGR$SUM / 4) - 8 * log10 ( 27.37))
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10(SUM / 4) - 8 * log10 ( 27.37))
View(test)
luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross)
luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
distinct()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross)
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
distinct %>%
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
distinct()
UGR <- luminaire %>%
na.omit() %>%
mutate(SUM = I_CG_cross^2 /( A_p_cross * R^2 * p^2)) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(SUM, sum )) %>%
ungroup()
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
distinct() %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10(SUM / 4) - 8 * log10 ( 27.37))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
View(test)
UGR <- luminaire %>%
na.omit() %>%
mutate(SUM = I_CG_cross^2 /( A_p_cross * R^2 * p^2)) %>%
group_by(`Reflectance_C/W/R`, X_Dim, Y_Dim) %>%
summarise(across(SUM, sum )) %>%
ungroup()
UGR %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
test <- luminaire %>%
select(`Reflectance_C/W/R`, X_Dim, Y_Dim, E_WID_cross) %>%
distinct() %>%
right_join(UGR, by = c("Reflectance_C/W/R", "X_Dim", "Y_Dim")) %>%
mutate(UGR = 8 * log10(SUM / 4) - 8 * log10 (E_WID_cross / pi))
test %>%
filter(`Reflectance_C/W/R` == "70/50/20" & X_Dim == "2H" & Y_Dim == "4H") %>%
kable() %>%
kable_classic()
View(UGR)
